/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {

        ArrayList<List<Integer>> ls=new ArrayList<List<Integer>>();
        if(root==null)
            return ls;
        Queue <TreeNode> q=new LinkedList<>();
        q.offer(root);

        while(! q.isEmpty())
        {
            int sz=q.size();
            ArrayList <Integer> al=new ArrayList<>();
            for(int i=0;i<sz;i++)
            {
                if(q.peek().left!=null)
                    q.offer(q.peek().left);
                if(q.peek().right!=null)
                    q.offer(q.peek().right);
                
                al.add(q.poll().val);

                
            }
            ls.add(al);
        }
        return ls;  
    }
}
